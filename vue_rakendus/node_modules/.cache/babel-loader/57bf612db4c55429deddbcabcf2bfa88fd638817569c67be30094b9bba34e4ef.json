{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Makse kuupäev\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Põhiosa jääk\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Põhiosa makse\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Intress\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Makse kogusumma\"), /*#__PURE__*/_createCommentVNode(\" Add more columns as needed \")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.loans, loan => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: loan.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(loan.month), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(loan.monthly_breakdown.remaining_loan_amount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(loan.monthly_breakdown.monthly_principal), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(loan.monthly_breakdown.monthly_interest), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(loan.monthly_breakdown.monthly_emi), 1 /* TEXT */), _createCommentVNode(\" Add more cells as needed \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","loans","loan","key","id","_toDisplayString","month","monthly_breakdown","remaining_loan_amount","monthly_principal","monthly_interest","monthly_emi"],"sources":["C:\\Users\\37253\\Desktop\\Coop-praktika\\Maksegraafiku_rakendus\\vue_rakendus\\src\\components\\LoanTable.vue"],"sourcesContent":["<template>\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th>Makse kuupäev</th>\r\n      <th>Põhiosa jääk</th>\r\n      <th>Põhiosa makse</th>\r\n      <th>Intress</th>\r\n      <th>Makse kogusumma</th>\r\n      <!-- Add more columns as needed -->\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr v-for=\"loan in loans\" :key=\"loan.id\">\r\n      <td>{{ loan.month }}</td>\r\n      <td>{{ loan.monthly_breakdown.remaining_loan_amount }}</td>\r\n      <td>{{ loan.monthly_breakdown.monthly_principal }}</td>\r\n      <td>{{ loan.monthly_breakdown.monthly_interest }}</td>\r\n      <td>{{ loan.monthly_breakdown.monthly_emi }}</td>\r\n      <!-- Add more cells as needed -->\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: ['onNewLoan'],\r\n  setup(props) {\r\n    const loans = ref([]);\r\n\r\n    const fetchLoans = async () => {\r\n      try {\r\n        const response = await axios.get('/api/loans');\r\n        loans.value = response.data.map(loan => ({\r\n          id: loan.id,\r\n          laenusumma: loan.laenusumma,\r\n          perioodKuudes: loan.perioodKuudes,\r\n          alguskuupäev: loan.alguskuupäev,\r\n        }));\r\n        console.log('Fetched loans:', response.data)\r\n      } catch (error) {\r\n        console.error('Failed to fetch loans:', error);\r\n      }\r\n    };\r\n\r\n    watch(props.onNewLoan, (newLoan) => {\r\n      if (newLoan) {\r\n        loans.value.push(newLoan);\r\n      }\r\n    });\r\n\r\n    onMounted(fetchLoans);\r\n\r\n    return {\r\n      loans,\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEIA,mBAAA,CASQ,gB,aARRA,mBAAA,CAOK,a,aANHA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBC,mBAAA,gCAAmC,C;;uBARvCC,mBAAA,CAqBQ,gBApBNC,UASQ,EACRH,mBAAA,CASQ,iB,kBARRE,mBAAA,CAOKE,SAAA,QApBTC,WAAA,CAauBC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAOK;MAPsBO,GAAG,EAAED,IAAI,CAACE;QACnCV,mBAAA,CAAyB,YAAAW,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBZ,mBAAA,CAA2D,YAAAW,gBAAA,CAApDH,IAAI,CAACK,iBAAiB,CAACC,qBAAqB,kBACnDd,mBAAA,CAAuD,YAAAW,gBAAA,CAAhDH,IAAI,CAACK,iBAAiB,CAACE,iBAAiB,kBAC/Cf,mBAAA,CAAsD,YAAAW,gBAAA,CAA/CH,IAAI,CAACK,iBAAiB,CAACG,gBAAgB,kBAC9ChB,mBAAA,CAAiD,YAAAW,gBAAA,CAA1CH,IAAI,CAACK,iBAAiB,CAACI,WAAW,kBACzChB,mBAAA,8BAAiC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  setup() {\n    const loanAmount = ref('');\n    const period = ref('');\n    const startDate = ref('');\n    const errors = ref({});\n    const today = computed(() => {\n      const date = new Date();\n      return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    });\n    const validateForm = () => {\n      let valid = true;\n      errors.value = {};\n      if (!loanAmount.value || loanAmount.value < 20000 || loanAmount.value > 300000) {\n        errors.value.loanAmount = 'Laenusumma peab olema vahemikus 20000 - 300000';\n        valid = false;\n      }\n      if (!period.value || period.value < 1) {\n        errors.value.period = 'Periood peab olema vähemalt 1 aasta';\n        valid = false;\n      }\n      if (startDate.value && startDate.value < today.value) {\n        errors.value.startDate = 'Alguskuupäev ei tohi olla minevikus';\n        valid = false;\n      }\n      return valid;\n    };\n    const submitForm = () => {\n      if (validateForm()) {\n        const newLoan = {\n          laenusumma: loanAmount.value,\n          perioodKuudes: period.value,\n          alguskuupäev: startDate.value\n        };\n        //emit('new-loan', newLoan);\n        //TODO :)\n      }\n    };\n    return {\n      loanAmount,\n      period,\n      startDate,\n      errors,\n      today,\n      submitForm\n      //emit,\n      //TODO :)\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","setup","loanAmount","period","startDate","errors","today","date","Date","getFullYear","getMonth","getDate","validateForm","valid","value","submitForm","newLoan","laenusumma","perioodKuudes","alguskuupäev"],"sources":["C:\\Users\\37253\\Desktop\\Coop-praktika\\Maksegraafiku_rakendus\\vue_rakendus\\src\\components\\LoanForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitForm\">\r\n    <div>\r\n      <label for=\"loanAmount\">Laenusumma:</label>\r\n      <input type=\"number\" id=\"loanAmount\" v-model=\"loanAmount\" min=\"20000\" max=\"300000\" required />\r\n      <p v-if=\"errors.loanAmount\">{{ errors.loanAmount }}</p>\r\n    </div>\r\n    <div>\r\n      <label for=\"period\">Periood (aastates):</label>\r\n      <input type=\"number\" id=\"period\" v-model=\"period\" min=\"1\" required />\r\n      <p v-if=\"errors.period\">{{ errors.period }}</p>\r\n    </div>\r\n    <div>\r\n      <label for=\"startDate\">Alguskuupäev (valikuline):</label>\r\n      <input type=\"date\" id=\"startDate\" v-model=\"startDate\" :min=\"today\" />\r\n      <p v-if=\"errors.startDate\">{{ errors.startDate }}</p>\r\n    </div>\r\n    <button type=\"submit\">Submit</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const loanAmount = ref('');\r\n    const period = ref('');\r\n    const startDate = ref('');\r\n    const errors = ref({});\r\n\r\n    const today = computed(() => {\r\n      const date = new Date();\r\n      return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n    });\r\n\r\n    const validateForm = () => {\r\n      let valid = true;\r\n      errors.value = {};\r\n\r\n      if (!loanAmount.value || loanAmount.value < 20000 || loanAmount.value > 300000) {\r\n        errors.value.loanAmount = 'Laenusumma peab olema vahemikus 20000 - 300000';\r\n        valid = false;\r\n      }\r\n\r\n      if (!period.value || period.value < 1) {\r\n        errors.value.period = 'Periood peab olema vähemalt 1 aasta';\r\n        valid = false;\r\n      }\r\n\r\n      if (startDate.value && startDate.value < today.value) {\r\n        errors.value.startDate = 'Alguskuupäev ei tohi olla minevikus';\r\n        valid = false;\r\n      }\r\n\r\n      return valid;\r\n    };\r\n    const submitForm = () => {\r\n      if (validateForm()) {\r\n        const newLoan = {\r\n          laenusumma: loanAmount.value,\r\n          perioodKuudes: period.value,\r\n          alguskuupäev: startDate.value,\r\n        };\r\n        //emit('new-loan', newLoan);\r\n        //TODO :)\r\n      }\r\n    };\r\n\r\n    return {\r\n      loanAmount,\r\n      period,\r\n      startDate,\r\n      errors,\r\n      today,\r\n      submitForm,\r\n      //emit,\r\n      //TODO :)\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":"AAsBA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIH,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMI,MAAK,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMK,SAAQ,GAAIL,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMM,MAAK,GAAIN,GAAG,CAAC,CAAC,CAAC,CAAC;IAEtB,MAAMO,KAAI,GAAIN,QAAQ,CAAC,MAAM;MAC3B,MAAMO,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC;MACvB,OAAQ,GAAED,IAAI,CAACE,WAAW,CAAC,CAAE,IAAGF,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAE,IAAGH,IAAI,CAACI,OAAO,CAAC,CAAE,EAAC;IACzE,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzB,IAAIC,KAAI,GAAI,IAAI;MAChBR,MAAM,CAACS,KAAI,GAAI,CAAC,CAAC;MAEjB,IAAI,CAACZ,UAAU,CAACY,KAAI,IAAKZ,UAAU,CAACY,KAAI,GAAI,KAAI,IAAKZ,UAAU,CAACY,KAAI,GAAI,MAAM,EAAE;QAC9ET,MAAM,CAACS,KAAK,CAACZ,UAAS,GAAI,gDAAgD;QAC1EW,KAAI,GAAI,KAAK;MACf;MAEA,IAAI,CAACV,MAAM,CAACW,KAAI,IAAKX,MAAM,CAACW,KAAI,GAAI,CAAC,EAAE;QACrCT,MAAM,CAACS,KAAK,CAACX,MAAK,GAAI,qCAAqC;QAC3DU,KAAI,GAAI,KAAK;MACf;MAEA,IAAIT,SAAS,CAACU,KAAI,IAAKV,SAAS,CAACU,KAAI,GAAIR,KAAK,CAACQ,KAAK,EAAE;QACpDT,MAAM,CAACS,KAAK,CAACV,SAAQ,GAAI,qCAAqC;QAC9DS,KAAI,GAAI,KAAK;MACf;MAEA,OAAOA,KAAK;IACd,CAAC;IACD,MAAME,UAAS,GAAIA,CAAA,KAAM;MACvB,IAAIH,YAAY,CAAC,CAAC,EAAE;QAClB,MAAMI,OAAM,GAAI;UACdC,UAAU,EAAEf,UAAU,CAACY,KAAK;UAC5BI,aAAa,EAAEf,MAAM,CAACW,KAAK;UAC3BK,YAAY,EAAEf,SAAS,CAACU;QAC1B,CAAC;QACD;QACA;MACF;IACF,CAAC;IAED,OAAO;MACLZ,UAAU;MACVC,MAAM;MACNC,SAAS;MACTC,MAAM;MACNC,KAAK;MACLS;MACA;MACA;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}